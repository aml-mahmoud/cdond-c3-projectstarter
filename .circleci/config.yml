version: 2.1
orbs:
  slack: circleci/slack@4.1
commands:
  notify_on_fail:
    steps:
      - slack/notify:
          event: fail
          channel: project
          template: basic_fail_1
          


jobs:
  build-frontend:
    docker:
      - image: circleci/node:13.8.0
    steps:
      - checkout
      - restore_cache:
          keys: [frontend-build]
      - run:
          name: Build front-end
          command: |
            cd frontend
            npm install
            npm run build
            # Your code here
            #exit 1
      - save_cache:
          paths: [frontend/node_modules]
          key: frontend-build
      - notify_on_fail
  build-backend:
    docker:
      - image: circleci/node:13.8.0
    steps:
      - checkout
      - restore_cache:
          keys: [backend-build]
      - run:
          name: Back-end build
          command: |
            cd backend
            npm install
            npm run build
             # Your code here
             #exit 1
      - save_cache:
          paths: [backend/node_modules]
          key: backend-build
      - notify_on_fail    
  test-frontend:
    docker:
      - image: circleci/node:13.8.0
    steps:
      - checkout
      - restore_cache:
          keys: [frontend-build]
      - run:
          name: front-end test 
          command: |
            cd frontend
            npm install
            npm run test  
      - notify_on_fail             
  test-backend:
    docker:
      - image: circleci/node:13.8.0
    steps:
      - checkout     
      - restore_cache:
          keys: [backend-build]
      - run:
          name: backend test
          command: |
            cd backend
            npm install
            npm run test 
      - notify_on_fail       
  scan-frontend:
    docker:
      - image: circleci/node:13.8.0
    steps:
      - checkout
      - restore_cache:
          keys: [frontend-build]
      - run:
          name: frontend scan
          command: | 
            cd frontend
            npm install
            # npm install oauth-sign@^0.9.0
            npm audit fix --audit-level=critical --force
            #npm audit --audit-level=critical
      - notify_on_fail      
  
  scan-backend:
    docker:
      - image: circleci/node:13.8.0
    steps:
      - checkout
      - restore_cache:
          keys: [backend-build]
      - run:
          name: backend scan
          command: | 
            cd backend
            npm install
            # npm install oauth-sign@^0.9.0
            npm audit fix --audit-level=critical --force
            npm audit fix --audit-level=critical --force
            #npm audit --audit-level=critical
            # npm audit fix --audit-level=critical --force
            # # If the "npm audit fix" command above could not fix all critical vulnerabilities, try “npm audit fix --force” again
            # npm audit --audit-level=critical
      - notify_on_fail    
  notify_on_success:
    docker:
      - image: circleci/node:13.8.0
    steps:
      - slack/notify:
          event: success
          channel: project
          template: success_tagged_deployment_1
          
             
workflows:
  default:
    jobs:
      - build-frontend
      - build-backend 
      - test-frontend:
          requires:
            - build-frontend
      - test-backend:
          requires:
            - build-backend
      - scan-frontend:
          requires:
            - build-frontend
      - scan-backend:
          requires:
            - build-backend
      - notify_on_success:
          requires:
            - build-frontend
            - build-backend
            - test-backend
            - test-frontend